<?php
/**
 * @file
 * Tests for the hello world module.
 */

class HelloworldTests extends DrupalWebTestCase {

  /**
   * Metadata about our test case.
   */
  public static function getInfo() {
    return array(
      'name' => 'Hello World',
      'description' => 'Tests for the Hello World module.',
      'group' => 'Hello World Group',
    );
  }

  /**
   * Perform any setup tasks for our test case.
   */
  public function setUp() {
    parent::setUp(array('helloworld'));
  }

  public function testHelloWorld() {
    $this->drupalGet('helloworld');
    $this->assertText('Hello World. Welcome to Drupal.', 'The page content is present.');

    $variable = FALSE;
    $this->assertFalse($variable, 'The value is false.');

    $first = $second = 'rainbows';
    $this->assertEqual($first, $second, 'The two variables are equal.');

    $first = 1;
    $second = '1';
    // $this->assertIdentical($first, $second, 'The variables are identical.');

    $this->assertNoText('Tacos', 'Tacos is not found.');

    // $this->assertRaw('<p>', 'There is a p tag.');

    $this->assertFieldByName('name', '', 'The username field is present.');
  }

  public function testNavigation() {
    // http://example.com/helloworld
    $this->drupalGet('helloworld');
    $this->assertResponse(200, 'The page is available.');

    $this->clickLink('Create new account');
    // example.com/user/register.
    $this->assertUrl('user/register');
  }


  public function testForms() {
    $this->drupalGet('helloworld/form');

    $this->assertFieldByXpath("//form[@id='helloworld-cake-form']//input[@name='name']", '', 'The name field is present.');
    $this->assertFieldByName('choice', 'cake', 'The choice field is present.');

    $data = array(
      'name' => '',
      'choice' => 'chicken',
    );
    $this->drupalPost('helloworld/form', $data, 'Submit');
    $this->assertText('Your name field is required.', 'Name field is required.');

    $data = array(
      'name' => 'Joe',
      'choice' => 'cake',
    );

    $this->drupalPost('helloworld/form', $data, 'Submit');
    $this->assertText("We're out of cake!", 'Cake error is displayed when cake is selected.');

    $this->drupalPost('helloworld/form', $data, 'Equivocate');
    $this->assertText('Make up your mind!', 'Equivocate button works.');

    $data = array(
      'name' => 'Joe',
      'choice' => 'chicken',
    );
    $this->drupalPost('helloworld/form', $data, 'Submit');
    $this->assertText('Joe, you chose chicken', 'Form works with valid data.');

  }

}









